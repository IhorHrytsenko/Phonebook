{"version":3,"sources":["components/ContactList.module.css","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/ContactList.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Form.js","views/Contacts.js"],"names":["module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","fetchDeleteContacts","operations","fetchContacts","connect","state","contacts","phonebook","filter","auth","dispatch","id","token","useDispatch","handleDelete","event","target","useEffect","className","map","name","number","type","onClick","style","contact__delete","uuidv4","contact","includes","_slicedToArray","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","value","err","unsupportedIterableToArray","fetchAddContacts","useState","setId","addContact","preventDefault","onSubmit","some","alert","htmlFor","pattern","title","required","onChange","filterContact","filterAction"],"mappings":"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","file":"static/js/3.2081fd5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__delete\":\"ContactList_contact__delete__2Q8FF\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\r\nimport style from './ContactList.module.css';\r\nimport React, { useEffect } from 'react';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport operations from '../redux/operations';\r\n\r\nconst fetchDeleteContacts = operations.fetchDeleteContacts;\r\nconst fetchContacts = operations.fetchContacts;\r\n\r\nfunction ContactList(state) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = (event) => {\r\n\r\n        state.fetchDeleteContacts(event.target.id);\r\n        state.fetchContacts(state.auth.token)\r\n    }\r\n\r\n    useEffect(() =>{ \r\n        dispatch(operations.fetchContacts(state.auth.token))\r\n    },[dispatch, state.auth.token])\r\n\r\n\r\n    if (state.filter.length === 0){\r\n        return (\r\n                <ul className=\"contact__list\">\r\n                    {  state.contacts.map(({ name, number, id }) => (\r\n                        <li className=\"contact__item\" key={uuidv4()} >\r\n                            {name}: {number}\r\n                            <button type=\"button\" onClick={handleDelete} className={style.contact__delete} id={id}> Удалить</button>\r\n                        </li> ))\r\n                    }\r\n                </ul>\r\n            )\r\n    }\r\n    if (state.filter.length !== 0){\r\n        return (\r\n                <ul className=\"contact__list\">\r\n                    {  state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter)).map(({ name, number, id }) => (\r\n                        <li className=\"contact__item\" key={uuidv4()} >\r\n                            {name}: {number}\r\n                            <button type=\"button\" onClick={handleDelete} className={style.contact__delete} id={id}> Удалить</button>\r\n                        </li> ))\r\n                    }\r\n                </ul>\r\n            )\r\n    }\r\n        \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   contacts: state.phonebook.contacts,\r\n   filter: state.phonebook.filter,\r\n   auth: state.auth,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDeleteContacts: id =>{\r\n        dispatch(fetchDeleteContacts(id))\r\n    \r\n    },\r\n\r\n    fetchContacts: token => {\r\n        dispatch(fetchContacts(token))\r\n    }, \r\n})\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n  \r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport operations from '../redux/operations';\r\n\r\nconst fetchAddContacts = operations.fetchAddContacts;\r\n\r\nfunction Form (state) {\r\n\r\n    const [id, setId] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    function addContact(event) {\r\n        event.preventDefault();\r\n        if (id !== event.target.value)\r\n        {\r\n            setId(event.target.value);\r\n        }\r\n    };\r\n\r\n    function apiAddContacts (event){\r\n        event.preventDefault();\r\n\r\n        if(state.contacts.some(contact => contact.name === event.target.name.value)){\r\n            alert(`Контакт с таким именем ${event.target.name.value} уже существует`);\r\n            return;\r\n        }\r\n        else {\r\n            dispatch(fetchAddContacts({name: event.target.name.value, number: event.target.number.value}));\r\n        }\r\n\r\n    }\r\n\r\n        return (\r\n        <form className=\"form\" onSubmit={apiAddContacts}>\r\n        <label htmlFor=\"name\" className=\"form__label\">\r\n            ФИО: </label>\r\n        <input\r\n            className=\"form__field\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            id=\"name\"\r\n            onChange={addContact}\r\n        />\r\n        \r\n        <label htmlFor=\"number\" className=\"form__label\">\r\n            Номер телефона: </label>\r\n        <input\r\n            className=\"form__field\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            id=\"number\"\r\n            onChange={addContact}\r\n        />\r\n          \r\n        <button type=\"submit\" className=\"form__button\">Добавить контакт</button>\r\n    </form>\r\n)}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.phonebook.contacts,\r\n\r\n})\r\n   \r\nexport default connect(mapStateToProps, null)(Form)\r\n  ","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../App.css';\r\nimport ContactList from '../components/ContactList';\r\nimport Form from '../components/Form';\r\nimport operations from '../redux/operations';\r\n\r\nfunction Contacts(state) {\r\n\r\n   return (   \r\n<div className=\"App\">\r\n<h2>Телефонная книга</h2>\r\n<Form />\r\n\r\n<h2>Контакты</h2>\r\n<label>Поиск по ФИО:</label>\r\n<input\r\n  className=\"form__field\"\r\n  name=\"filter\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  type=\"text\"\r\n  onChange={state.filterContact}\r\n/>\r\n\r\n<ContactList />\r\n</div>\r\n\r\n)\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   \r\n    return {\r\n      filterContact: (event) => {\r\n        dispatch(operations.filterAction(event.target.value.toLowerCase()));\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n\r\n export default connect(null, mapDispatchToProps)(Contacts)"],"sourceRoot":""}